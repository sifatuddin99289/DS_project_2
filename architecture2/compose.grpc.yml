version: "3.9"

services:
  # ---------------------------
  # PostgreSQL + TimescaleDB
  # ---------------------------
  timescaledb:
    image: timescale/timescaledb:latest-pg16
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - "55432:5432"  # host:container (changed host port from 5432 -> 55432)
    restart: unless-stopped

  # ---------------------------
  # Redis for caching/queueing
  # ---------------------------
  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    ports:
      - "6381:6379"  # host:container (changed host port from 6379 -> 6381)
    restart: unless-stopped

  # ---------------------------
  # Ingestion Service (gRPC)
  # ---------------------------
  ingestion:
    build:
      context: .
      dockerfile: services/ingestion/Dockerfile
    environment:
      - REDIS_ADDR=redis:6379
    depends_on:
      - redis
    ports:
      - "50051:50051"
    restart: unless-stopped

  # ---------------------------
  # Aggregator Service (gRPC)
  # ---------------------------
  aggregator:
    build:
      context: .
      dockerfile: services/aggregator/Dockerfile
    environment:
      - REDIS_ADDR=redis:6379
    depends_on:
      - redis
    ports:
      - "50053:50053"
    restart: unless-stopped

  # ---------------------------
  # Alerter Service (gRPC)
  # ---------------------------
  alerter:
    build:
      context: .
      dockerfile: services/alerter/Dockerfile
    environment:
      - REDIS_ADDR=redis:6379
    depends_on:
      - redis
    ports:
      - "50054:50054"
    restart: unless-stopped

  # ---------------------------
  # Query API (gRPC â†’ TimescaleDB)
  # ---------------------------
  queryapi:
    build:
      context: .
      dockerfile: services/query-api/Dockerfile
    depends_on:
      - timescaledb
    ports:
      - "50052:50052"
    restart: unless-stopped

  # ---------------------------
  # Additional nodes (for scaling)
  # ---------------------------
  ingestion2:
    image: architecture2-ingestion
    depends_on:
      - redis
    environment:
      - REDIS_ADDR=redis:6379
    ports:
      - "50055:50051"  # different host port
    restart: unless-stopped

  aggregator2:
    image: architecture2-aggregator
    depends_on:
      - redis
    ports:
      - "50056:50053"  # different host port
    restart: unless-stopped

  # ---------------------------
  # Grafana Dashboard
  # ---------------------------
  grafana:
    image: grafana/grafana:11.1.0
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - timescaledb
    ports:
      - "3300:3000"   # changed to 3300 to avoid conflicts
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana

# ---------------------------
# Named Volumes
# ---------------------------
volumes:
  redis-data:
  pg-data:
  grafana-data:

